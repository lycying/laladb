tpl 根据业务场景推荐的配置
bootstrap 启动脚本，参数解析，要求可以定制化(要求配置升级可在线更改)
cluster 集群方式，包括各种sharding策略，主从模式,一致性hash或者cap等
fs 文件系统，刷磁盘或者ram，要求能够混用多种存储能够存多盘
bin 需要编译成二进制的命令目录，包括管理目录，对外提供的命令集合
parser 与客户端交互的二进制协议
utils 工具
contrib 用户提交的或者试验性质的代码，要求能够使用pipeline动态加载到执行链中
buffer 抽象的缓冲区域，要求能够更具buffer刷新到不同的存储引擎
benchmark 压测工具,使用实际业务场景压测
stat 命令行监控工具
web 提供统一的管理平台，统一的sharding操作等，插件形式
mpp 最后阶段，大规模处理模式

特色：
修改配置不需要重启
集成的后台管理工具
每个部分都可以使用插件方式加入新功能
提供CAP模式的可选方案
使用实际业务场景进行压测


表空间文件通过动态的指定多个文件路径和扩展方式来动态使用多块盘
idea:是否可以通过判断磁盘性质和性能来动态调整参数
重做日志是事务和故障保证的基础，通过每次刷入磁盘512(一个扇区)字节的方式，来确保一定能够写入到磁盘上。fsync或者文件缓冲区。
二进制(binlog)文件有三种格式，statement,row,mix，通常是作为历史追溯用

tablespace->segment(extent)[1M]->page->row
共享表空间一直会不断的增长，因为缓冲页、undo等信息都是在共享表空间中
为了保证页的连续性，一次性申请4-5个区(extent)，默认页的大小为16kb,当单位列的长度超过16kb，则走溢出逻辑 
idea:可以采用压缩页，也可以采用类似netty缓冲区分配，也可以linux的buddy(伙伴)算法
页面设计使用紧凑压缩的二进制存储